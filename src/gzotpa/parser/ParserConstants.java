/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package gzotpa.parser;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VOID = 1;
  /** RegularExpression Id. */
  int NULL = 2;
  /** RegularExpression Id. */
  int BOOL = 3;
  /** RegularExpression Id. */
  int TRUE = 4;
  /** RegularExpression Id. */
  int FALSE = 5;
  /** RegularExpression Id. */
  int INT = 6;
  /** RegularExpression Id. */
  int STR = 7;
  /** RegularExpression Id. */
  int CLASS = 8;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int ELSE = 10;
  /** RegularExpression Id. */
  int WHILE = 11;
  /** RegularExpression Id. */
  int FOR = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int BREAK = 14;
  /** RegularExpression Id. */
  int CONTINUE = 15;
  /** RegularExpression Id. */
  int NEW = 16;
  /** RegularExpression Id. */
  int SIZE = 17;
  /** RegularExpression Id. */
  int IDENTIFIER = 18;
  /** RegularExpression Id. */
  int INTEGER = 19;
  /** RegularExpression Id. */
  int SPACES = 20;
  /** RegularExpression Id. */
  int LINE_COMMENT = 21;
  /** RegularExpression Id. */
  int STRING = 26;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_STRING = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"void\"",
    "\"null\"",
    "\"bool\"",
    "\"true\"",
    "\"false\"",
    "\"int\"",
    "\"string\"",
    "\"class\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"return\"",
    "\"break\"",
    "\"continue\"",
    "\"new\"",
    "\"size\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<SPACES>",
    "<LINE_COMMENT>",
    "\"\\\"\"",
    "<token of kind 23>",
    "<token of kind 24>",
    "<token of kind 25>",
    "\"\\\"\"",
    "\")\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"(\"",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"<<=\"",
    "\">>=\"",
    "\"||\"",
    "\"&&\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"==\"",
    "\"!=\"",
    "\"|\"",
    "\"^\"",
    "\"&\"",
    "\">>\"",
    "\"<<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\"!\"",
    "\"~\"",
    "\".\"",
  };

}
